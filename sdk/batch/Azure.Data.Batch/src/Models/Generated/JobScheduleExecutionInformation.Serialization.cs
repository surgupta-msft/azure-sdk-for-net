// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Data.Batch.Models
{
    public partial class JobScheduleExecutionInformation
    {
        internal static JobScheduleExecutionInformation DeserializeJobScheduleExecutionInformation(JsonElement element)
        {
            Optional<DateTimeOffset> nextRunTime = default;
            Optional<RecentJob> recentJob = default;
            Optional<DateTimeOffset> endTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("nextRunTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    nextRunTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("recentJob"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    recentJob = RecentJob.DeserializeRecentJob(property.Value);
                    continue;
                }
                if (property.NameEquals("endTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new JobScheduleExecutionInformation(Optional.ToNullable(nextRunTime), recentJob.Value, Optional.ToNullable(endTime));
        }
    }
}
