// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Data.Batch.Models
{
    /// <summary> The Task counts for a Job. </summary>
    public partial class TaskCounts
    {
        /// <summary> Initializes a new instance of TaskCounts. </summary>
        /// <param name="active"> The number of Tasks in the active state. </param>
        /// <param name="running"> The number of Tasks in the running or preparing state. </param>
        /// <param name="completed"> The number of Tasks in the completed state. </param>
        /// <param name="succeeded"> The number of Tasks which succeeded. A Task succeeds if its result (found in the executionInfo property) is &apos;success&apos;. </param>
        /// <param name="failed"> The number of Tasks which failed. A Task fails if its result (found in the executionInfo property) is &apos;failure&apos;. </param>
        internal TaskCounts(int active, int running, int completed, int succeeded, int failed)
        {
            Active = active;
            Running = running;
            Completed = completed;
            Succeeded = succeeded;
            Failed = failed;
        }

        /// <summary> The number of Tasks in the active state. </summary>
        public int Active { get; }
        /// <summary> The number of Tasks in the running or preparing state. </summary>
        public int Running { get; }
        /// <summary> The number of Tasks in the completed state. </summary>
        public int Completed { get; }
        /// <summary> The number of Tasks which succeeded. A Task succeeds if its result (found in the executionInfo property) is &apos;success&apos;. </summary>
        public int Succeeded { get; }
        /// <summary> The number of Tasks which failed. A Task fails if its result (found in the executionInfo property) is &apos;failure&apos;. </summary>
        public int Failed { get; }
    }
}
