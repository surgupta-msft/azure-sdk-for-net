// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Data.Batch.Models
{
    public partial class MultiInstanceSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(NumberOfInstances))
            {
                writer.WritePropertyName("numberOfInstances");
                writer.WriteNumberValue(NumberOfInstances.Value);
            }
            writer.WritePropertyName("coordinationCommandLine");
            writer.WriteStringValue(CoordinationCommandLine);
            if (Optional.IsCollectionDefined(CommonResourceFiles))
            {
                writer.WritePropertyName("commonResourceFiles");
                writer.WriteStartArray();
                foreach (var item in CommonResourceFiles)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static MultiInstanceSettings DeserializeMultiInstanceSettings(JsonElement element)
        {
            Optional<int> numberOfInstances = default;
            string coordinationCommandLine = default;
            Optional<IList<ResourceFile>> commonResourceFiles = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("numberOfInstances"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    numberOfInstances = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("coordinationCommandLine"))
                {
                    coordinationCommandLine = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("commonResourceFiles"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ResourceFile> array = new List<ResourceFile>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ResourceFile.DeserializeResourceFile(item));
                    }
                    commonResourceFiles = array;
                    continue;
                }
            }
            return new MultiInstanceSettings(Optional.ToNullable(numberOfInstances), coordinationCommandLine, Optional.ToList(commonResourceFiles));
        }
    }
}
