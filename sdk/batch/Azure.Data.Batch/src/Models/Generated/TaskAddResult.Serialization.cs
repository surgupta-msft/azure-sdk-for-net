// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Data.Batch.Models
{
    public partial class TaskAddResult
    {
        internal static TaskAddResult DeserializeTaskAddResult(JsonElement element)
        {
            TaskAddStatus status = default;
            string taskId = default;
            Optional<string> eTag = default;
            Optional<DateTimeOffset> lastModified = default;
            Optional<string> location = default;
            Optional<BatchError> error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"))
                {
                    status = property.Value.GetString().ToTaskAddStatus();
                    continue;
                }
                if (property.NameEquals("taskId"))
                {
                    taskId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eTag"))
                {
                    eTag = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastModified"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastModified = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    location = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("error"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    error = BatchError.DeserializeBatchError(property.Value);
                    continue;
                }
            }
            return new TaskAddResult(status, taskId, eTag.Value, Optional.ToNullable(lastModified), location.Value, error.Value);
        }
    }
}
